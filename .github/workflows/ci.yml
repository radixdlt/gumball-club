name: Build

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT_NAME:
        description: "Environment Name"
        required: true
        default: stokenet
        type: choice
        options:
          - Stokenet
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

permissions:
  id-token: write
  contents: read
  deployments: write
  packages: write
  pull-requests: write

# Network names are camelcase
env:
  active_network: "Stokenet"
  release_network: "Mainnet"
  jenkins_job_name: 'kubernetes-deployments/job/gumball-club'
  helm_dir: 'deploy/helm'
  dev_eks_cluster: 'rdx-works-main-dev'
  prod_eks_cluster: 'rtlj-prod'

jobs:
  phylum-analyze:
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/phylum-analyze.yml@main
    permissions:
      id-token: write
      pull-requests: write
      contents: read
    secrets:
      phylum_api_key: ${{ secrets.PHYLUM_API_KEY }}

  setup-build-args:
    runs-on: ubuntu-latest
    name: Setup build argument values for docker
    outputs:
      network: ${{ steps.network.outputs.network }}
      tag-with-network: ${{steps.tag-with-network.outputs.tag-with-network}}
    steps:
      - name: Dump context
        uses: RDXWorks-actions/ghaction-dump-context@master
      - name: Info
        run: |
          echo "This is triggered by: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
      - name: Define network name
        id: network_name_step
        run: |
          if [ "${{ github.event_name}}" = 'workflow_dispatch' ]; then
            echo "network_name="${{ github.event.inputs.ENVIRONMENT_NAME }}"" >> $GITHUB_ENV
          elif [ "${{ github.event.action }}" = "published" ]; then
            echo "network_name=${{ env.release_network }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/main" -a "${{ github.event_name }}" = 'push' ] || [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "network_name=${{ env.active_network }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" =~ "refs/heads/release".* -a "${{ github.event_name }}" = 'push' ]; then
            echo "network_name=${{ env.release_network }}" >> $GITHUB_ENV
          fi
      - id: network
        run: |
          echo "network=${{ env.network_name }}" >> $GITHUB_OUTPUT
      - id: tag-with-network
        run: |
          echo "tag-with-network=${{github.sha}}-${{ env.network_name }}" >> $GITHUB_OUTPUT

  push-docker-image:
    name: Docker build
    needs:
      - setup-build-args
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@main
    permissions:
      id-token: write
      pull-requests: write
      contents: read
      deployments: write
      packages: write
    with:
      runs_on: ubuntu-latest
      image_registry: "docker.io"
      image_organization: "radixdlt"
      image_name: "private-gumball-club"
      tag: ${{ needs.setup-build-args.outputs.tag-with-network }}
      context: "./dapp/"
      dockerfile: "./dapp/Dockerfile"
      platforms: "linux/amd64"
      scan_image: false
      build-args: |
        NETWORK_NAME=${{needs.setup-build-args.outputs.network}}

  deploy_pull_request:
    if: ${{ github.event.pull_request }}
    name: Deploy PR
    needs:
      - push-docker-image
      - setup-build-args
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/jenkins-deployment.yml@main
    with:
      jenkins_job_name: "kubernetes-deployments/job/gumball-club"
      github_branch: "${{ github.head_ref }}"
      application_name: "gumball-club"
      hierarchical_namespace: "gumball-club-ci-pr"
      create_subnamespace: "true"
      kubernetes_namespace: "gumball-club-pr-${{ github.event.number }}"
      aws_eks_cluster: "rdx-works-main-dev"
      aws_iam_role_name: "jenkins-gumball-club-pr-deployer"
      helmfile_environment: "pr"
      helmfile_extra_vars: "ci.tag=${{ needs.setup-build-args.outputs.tag-with-network }},ci.prNumber=${{ github.event.number }}"
    secrets:
      aws_deployment_account_id: ${{ secrets.AWS_DEV_ACCOUNT_ID }}
      secrets_account_id: ${{ secrets.SECRETS_ACCOUNT_ID }}

  deploy_dev:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Deploy DEV
    needs:
      - push-docker-image
      - setup-build-args
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/jenkins-deployment.yml@main
    with:
      github_environment: "dev"
      github_branch: "${{ github.ref }}"
      jenkins_job_name: "kubernetes-deployments/job/gumball-club"
      application_name: "gumball-club"
      kubernetes_namespace: "gumball-club-dev"
      aws_eks_cluster: "rdx-works-main-dev"
      aws_iam_role_name: "jenkins-gumball-club-dev-deployer"
      helmfile_environment: "dev"
      helmfile_extra_vars: "ci.tag=${{ needs.setup-build-args.outputs.tag-with-network }}"
    secrets:
      aws_deployment_account_id: ${{ secrets.AWS_DEV_ACCOUNT_ID }}
      secrets_account_id: ${{ secrets.SECRETS_ACCOUNT_ID }}

  deploy-stokenet:
    if: ( github.event.inputs.ENVIRONMENT_NAME == 'Stokenet' && github.event_name == 'workflow_dispatch' )
    name: Deploy STOKENET
    needs:
      - push-docker-image
      - setup-build-args
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/jenkins-deployment.yml@main
    with:
      github_environment: "stokenet"
      github_branch: "${{ github.ref }}"
      jenkins_job_name: "kubernetes-deployments/job/gumball-club"
      application_name: "gumball-club"
      kubernetes_namespace: "gumball-club-stokenet"
      aws_eks_cluster: "rtlj-prod"
      aws_iam_role_name: "jenkins-gumball-club-stokenet-deployer"
      helmfile_environment: "stokenet"
      helmfile_extra_vars: "ci.tag=${{ needs.setup-build-args.outputs.tag-with-network }}"
    secrets:
      aws_deployment_account_id: ${{ secrets.AWS_PROD_ACCOUNT_ID }}
      secrets_account_id: ${{ secrets.SECRETS_ACCOUNT_ID }}

  deploy-mainnet:
    if: github.event_name == 'release' && !github.event.release.prerelease
    name: Deploy MAINNET
    needs:
      - push-docker-image
      - setup-build-args
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/jenkins-deployment.yml@main
    with:
      github_environment: "mainnet"
      github_branch: "${{ github.ref }}"
      jenkins_job_name: "kubernetes-deployments/job/gumball-club"
      application_name: "gumball-club"
      kubernetes_namespace: "gumball-club-mainnet"
      aws_eks_cluster: "rtlj-prod"
      aws_iam_role_name: "jenkins-gumball-club-mainnet-deployer"
      helmfile_environment: "mainnet"
      helmfile_extra_vars: "ci.tag=${{ needs.setup-build-args.outputs.tag-with-network }}"
    secrets:
      aws_deployment_account_id: ${{ secrets.AWS_PROD_ACCOUNT_ID }}
      secrets_account_id: ${{ secrets.SECRETS_ACCOUNT_ID }}
